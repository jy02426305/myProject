<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd">

    <context:property-placeholder location="classpath:redis.properties" />
    <!--springSession 配置-->
    <bean id="sessionConfiguration" class="org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration">
        <!--修改session的有效时间-->
        <property name="maxInactiveIntervalInSeconds" value="1800"></property>
    </bean>
    <bean class="org.springframework.data.redis.connection.RedisStandaloneConfiguration">
        <property name="hostName" value="127.0.0.1" />
        <property name="port" value="6379" />
        <property name="password" value="ideatc168" />
        <property name="database" value="0" />
    </bean>

    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <!-- 最小空闲数 -->
        <property name="minIdle" value="${redis.minIdle}" />
        <!-- 最大空闲数 -->
        <property name="maxIdle" value="${redis.maxIdle}" />
        <!-- 最大连接数 -->
        <property name="maxTotal" value="${redis.maxTotal}" />
        <!-- 最大等待时间 单位毫秒（ms） -->
        <property name="maxWaitMillis" value="${redis.maxWaitMillis}" />
        <!-- 使用连接时测试连接是否可用 -->
        <property name="testOnBorrow" value="${redis.testOnBorrow}" />
    </bean>

    <!--<bean id="clusterRedisNodes1" class="org.springframework.data.redis.connection.RedisNode">
        <constructor-arg value="127.0.0.1" />
        <constructor-arg value="7000" type="int" />
    </bean>
    <bean id="clusterRedisNodes2" class="org.springframework.data.redis.connection.RedisNode">
        <constructor-arg value="127.0.0.1" />
        <constructor-arg value="7001" type="int" />
    </bean>
    <bean id="clusterRedisNodes3" class="org.springframework.data.redis.connection.RedisNode">
        <constructor-arg value="127.0.0.1" />
        <constructor-arg value="7002" type="int" />
    </bean>
    <bean id="clusterRedisNodes4" class="org.springframework.data.redis.connection.RedisNode">
        <constructor-arg value="127.0.0.1" />
        <constructor-arg value="7003" type="int" />
    </bean>
    <bean id="clusterRedisNodes5" class="org.springframework.data.redis.connection.RedisNode">
        <constructor-arg value="127.0.0.1" />
        <constructor-arg value="7004" type="int" />
    </bean>
    <bean id="clusterRedisNodes6" class="org.springframework.data.redis.connection.RedisNode">
        <constructor-arg value="127.0.0.1" />
        <constructor-arg value="7005" type="int" />
    </bean>-->

    <bean id="redisClusterConfiguration"
          class="org.springframework.data.redis.connection.RedisClusterConfiguration">
        <!--<property name="clusterNodes">-->
            <!--<set>-->
                <!--<ref bean="clusterRedisNodes1" />-->
                <!--<ref bean="clusterRedisNodes2" />-->
                <!--<ref bean="clusterRedisNodes3" />-->
                <!--<ref bean="clusterRedisNodes4" />-->
                <!--<ref bean="clusterRedisNodes5" />-->
                <!--<ref bean="clusterRedisNodes6" />-->
            <!--</set>-->
        <!--</property>-->
        <constructor-arg>
            <list>
                <value>${session.redis.cluster1}</value>
                <value>${session.redis.cluster2}</value>
                <value>${session.redis.cluster3}</value>
                <value>${session.redis.cluster4}</value>
                <value>${session.redis.cluster5}</value>
                <value>${session.redis.cluster6}</value>
            </list>
        </constructor-arg>
    </bean>

    <bean></bean>

    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <constructor-arg name="clusterConfig" ref="redisClusterConfiguration" />
        <constructor-arg name="poolConfig" ref="poolConfig" />
        <!--<property name="password" value="${redis.password}"></property>-->
    </bean>

    <!-- 缓存序列化方式 -->
    <bean id="keySerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer" />
    <bean id="valueSerializer" class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer" />

    <!-- 缓存 -->
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory" />
        <property name="keySerializer" ref="keySerializer" />
        <property name="valueSerializer" ref="valueSerializer" />
        <property name="hashKeySerializer" ref="keySerializer" />
        <property name="hashValueSerializer" ref="valueSerializer" />
    </bean>
    <bean id="redisCacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">
        <constructor-arg index="0" ref="redisTemplate" />
        <property name="defaultExpiration" value="${redis.expiration}" />
    </bean>
</beans>